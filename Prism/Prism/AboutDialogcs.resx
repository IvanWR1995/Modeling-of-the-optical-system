<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="textBox1.Text" xml:space="preserve">
    <value>Лабораторная работа:Призма.
Выполнил Шумаков Иван -студент МАТИ РГТУ им.Циолковского 
кафедры "Прикладная математика и информационные технологии "
группы 5-ИНТ-2ДБ-096

Диалог создания зеркал:
Диалог содержит 4 поля ввода для координат начала и конца зеркала,
список созданных зеркал,кнопку создать,которая создает зеркало с введенными координатами,
кнопки изменить ,удалить,отменить.
Для  удаления зеркала ,необходимо выбрать зеркало и нажать на кнопку удалить.
Для изменения координат существующего зеркала ,необходимо выбрать зеркало из списка,
изменить координаты зеркали и нажать на кнопку "Изменить".
Для создания зеркала нобходимо ввести его координаты и нажать кнопку "Создать".  
При создании зеркала его координаты не должны выходить за границы окна
и пересекаться с другими объектами на форме.
Для закрытия диалога необходимо нажать на кнопку "Отменить".
При нажати правой кнопкой мыши на зеркало появляется диалог, с помощью которого  можно изменить
 и удалить зеркало.

Диалог создания призмы:
Диалог создания призмы содержит:поля для ввода коэффициентов приломоения для Red,Green,Blue,
список созданных призм,поле для ввода количества вершин создаваемой призмы,поле для ввода коодинат ее вершин,
кнопки "Удалить","Применить","Отменить","Изменить","Создать по умолчанию","Ввести координаты",окно предпросмотра.
Коэффициенты  приломления призмы - дробные десятичные числа,лежащие в диапазоне [1;5].
Значение поля числа вершин может принимать целочисленные значения [3;10].
При создании необходимо выбрать один из режимов создания призмы:"Создать по умолчанию" или "Ввести координаты",
нажав на соответсвующую кнопку,предворительно введя необходимые данные.
При режиме  создания по умолчанию,обязательные поля для ввода - это коэффициенты приломления и количество вершин призмы.
При этом создается правильный многоугольник,который появляется в окне предпросмотра.для того чтобы многоугольник появиля на основной форме
необходимо нажать кнопку "Применить".
При режиме введения координат обязятельными полями являются поля коэффициентов прилоиления,поле ввода координат призмы.
Сначала необходимо заполнить нужные поля:
Формат ввода координат:Координаты разделяются точкой с запятой ,X и Y пробелами(шаблон:X Y;) 
Например:200 300;400 500;800 150;
Поле количества вершин при этом заполняется автоматически.
После заполнения данных полей необходимо нажать кнопку "Ввести координаты".
После нажатия этой кнопки призма появится в окне пердпросмотра,для того чтобы она создадась на основной форме необходимо нажать кнопку "Применить".
При выборе призмы из списка призм  ,она появляется в окне предпросмотра.
Для  удаления существующей призмы ее необхоодимо выбрать в списке призм и нажать кнопку удалить.
Для изменения координат и коэффициентов призмы необходимо после внесения изменений нажать кнопку "Изменить".
И для закрытия диалога нужно нажать кнопку "Отменить".

Диалог изменения/удаления призмы:
Вызывается при щелчке правой кнопкой мыши по призме.
С помощью этого диалого можно изменить/удалить сущесввующую призму.Также содржит окно предпросмотра.

Диалог изменения параметров источника:
На диалоге находится кнопка Включить/Выключить.Поля для составляющих  луча Red,Green,Blue.Они могут принимать значения [0;255].
Поле для ввода  количества лучей .Поле для ввода длины источника.
 теку
В меню также можно найти пункты сохранить и открыть.При выборе пункта "Сохранить " текущее состояние проэкта сохраняется в файл.
При выборе пункта "Открыть" открывается выбранный файл.




 






 


</value>
  </data>
</root>